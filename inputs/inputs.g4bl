/global/fieldMgr/eventTimeLimit 10000 s

# Redirect stdout & stderr to a file
output g4bl.out

# QGSP is the "default" physics use-case for HEP, but obsolete
# FTFP_BERT : For calorimetry, colliders, and general HEP
physics FTFP_BERT

###########################################################
# * Not needed? *
# the beam is 10 GeV kinetic energy, the mass of an e- is 0.511 MeV/c^2
#param M=0.511 KE=10000.0
#param P=sqrt(($M+$KE)*($M+$KE)-$M*$M)
###########################################################

# LXe parameters
param w=70 #  total x- and y-dimension [mm]
param d=10.0 # cube dimensions for each detector [mm]
param n='$w/$d-1' # n+1 = number of slices in x- and y-directions
param LXeZ=100 # total z-dimension [mm]

# Aim for ~3.5 Radiation lengths
#param RL=28.720 # radiation length of LXe in mm
#param L_RL=3.5 # desired thickness of LXe in radiation lengths
#param zDiv='ceil($RL*$L_RL/$d-1)' # rounds up to integer value to partition LXe in z-direction
param zDiv='$LXeZ/$d-1'

# offset the LXe target in z
param LXeFront=1000 # mm

# Beam parameters
param P=3000.0 # 3 GeV/c
param sigmaR=3.0 # mm
param beamX='($w-$d)/2' # mm
param beamY='($w-$d)/2' # mm

# Window parameters
param z_Divs=1 # number of slices in z
param WinTotThickness=2.0 # mm
param WinThickness=$WinTotThickness/$z_Divs # mm
param Rmax=10 # total radius of Be window [mm]
param r_Divs=24 # number of cuts in theta
param n_rings=12 # number of annuli to partition the window (doesn't include the center circle)
param mat=Be # define the window material as separate parameter so it can be easily changed

# Set r0 such that the final annulus has an outer radius equal to desired window radius
param rScaleFactor=sqrt($n_rings*$r_Divs+1)
param r0=$Rmax/$rScaleFactor # center circle radius [mm]

#param WinInZ='$LXeFront-$d/2-$WinThickness/2'
#param WinOutZ='$LXeFront+$zDiv*$d+$d/2+$WinThickness/2'
param WinInZ='$LXeFront-$WinThickness/2'
param WinOutZ='$LXeFront+$LXeZ+$WinThickness/2'


# Set e- beam parameters
beam gaussian meanMomentum=$P nEvents=100 particle=e- beamZ=0.0 beamX=$beamX beamY=$beamY sigmaX=$sigmaR sigmaY=$sigmaR sigmaXp=0.000100 sigmaYp=0.000100


###########################################################
#                       Detectors                         #
###########################################################

# For LXe target
#detector Det width=$d height=$d length=$d material=lXe color=0,0,0 format=ROOT
detector Det width=70 height=70 length=100 material=lXe color=0,0,0 format=ASCII

# Solely for collecting particle data at the end of the LXe target and exit window
# no `place` needed
zntuple zDet z='$LXeFront+$zDiv*$d+$d/2' format=ASCII file='zDet.txt'
zntuple zWinDet z='$WinOutZ+$WinThickness/2' format=ASCII file='zWinDet.txt'

# This can be ignored. There in case you want to check that the beam radius is ~6 mm
#virtualdetector vRadCheck radius=6 length=10^-6 material=Vacuum color=0,0,1 format=ASCII
# place vRadCheck x=$beamX y=$beamY z='$LXeFront-5-2*$WinThickness' rename=WinIn
# place vRadCheck x=$beamX y=$beamY z='$WinOutZ+$WinThickness/2+.5*10^-6' rename=WinOut


###########################################################
#                   Detector Placement                    #
###########################################################

# Place a 3D grid of cube detectors to fill out the LXe target
do i 0 $n
    do j 0 $n
        do k 0 $zDiv
            param x=$i*$d
            param y=$j*$d
            param z='$k*$d + $LXeFront'
            param color=$i/$n,$j/$n,$k/$zDiv,1
            place Det x=$x y=$y z=$z color=$color rename='Det$i.$j.$k'
        enddo
    enddo
enddo

# Place sections of annuli to fill disk geometry of windows 
# this ensures that the volume of each slice is equivalent
do nz 1 $z_Divs
    do i 0 $n_rings
        # Start by defining & placing a small circular detector in the center
        if $i==0
            '
            detector Win radius=$r0 length=$WinThickness material=$mat color=0,0,$nz/$z_Divs,1 format=ASCII
            place Win x=$beamX y=$beamY z='$WinInZ-($nz-1)*$WinThickness' rename=WinIn$i.0.$nz
            place Win x=$beamX y=$beamY z='$WinOutZ+($nz-1)*$WinThickness' rename=WinOut$i.0.$nz
            '
        else
            '
            do j 1 $r_Divs
                param col=$i/$n_rings,$j/$r_Divs,$nz/$z_Divs,1

                # Define parameters for radii and initial & final angles
                param innerRadius='sqrt(($i-1)*$r_Divs+1)*$r0' # mm
                param outerRadius='sqrt($i*$r_Divs+1)*$r0' # mm
                param initialPhi='($j-1)*360/$r_Divs' # degrees
                param finalPhi='$j*360/$r_Divs' # degrees

                # Create a unique solid (to assign the detector to)
                tubs Win_solid$i.$j innerRadius=$innerRadius outerRadius=$outerRadius initialPhi=$initialPhi finalPhi=$finalPhi length=$WinThickness

                # Create detector
                detector Win solid=Win_solid$i.$j material=$mat color=$col format=ASCII

                # Place entrance window
                place Win x=$beamX y=$beamY z='$WinInZ-($nz-1)*$WinThickness' rename=WinIn$i.$j.$nz

                # Place exit window
                place Win x=$beamX y=$beamY z='$WinOutZ+($nz-1)*$WinThickness' rename=WinOut$i.$j.$nz
            enddo
            '
        endif
    enddo
enddo